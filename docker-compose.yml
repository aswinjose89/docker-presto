---
# brings up the dependencies
version: '2'
services:
  # presto:
  #   build: .
  #   links:
  #     - mongodb
  #     - postgresql
  #     - mysql
  #   depends_on:
  #     - mongodb
  #     - postgresql
  #     - mysql
  #   ports:
  #     - "8080:8080"

  presto:
    image: ahanaio/prestodb-sandbox
    container_name: presto
    volumes:
      - ${PWD}/config/catalog/:/opt/presto-server/etc/catalog
      # - ${PWD}/config/config.properties:/opt/presto-server/etc/config.properties
      # - ${PWD}/config/jvm.config:/opt/presto-server/etc/jvm.config
    links:
      - mongodb
      - postgresql
      - mysql
      - elasticsearch
      - kibana
      - kafka
      - zookeeper
      
    depends_on:
      - mongodb
      - postgresql
      - mysql
      - elasticsearch
      - kafka
    ports:
      - "8080:8080"

  mysql:
    image: mysql
    container_name: presto-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'presto'
      MYSQL_USER: 'presto'
      MYSQL_PASSWORD: 'presto'
    ports:
      - "3306:3306"

  mongodb:
    image: mongo
    container_name: presto-mongo
    ports:
      - "27017:27017"

  postgresql:
    image: postgres
    container_name: presto-postgres
    environment:
      POSTGRES_USER: 'root'
      POSTGRES_PASSWORD: 'presto'
      POSTGRES_DB: 'postgres'
    ports:
      - "5432:5432"
  
  elasticsearch:
    container_name: presto-elasticsearch
    image: elasticsearch:7.9.1
    environment:
      - cluster.name=nids-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=elastic
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - es_data:/usr/share/elasticsearch/data:rw
  
  kibana:
    container_name: nids-elk-kb-cntr
    image: kibana:7.9.1
    environment:
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=elastic
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    stdin_open: true
    tty: true
    restart: always
    links: ['elasticsearch']
    
  zookeeper:
    container_name: nids-zookeeper-cntr
    image: confluentinc/cp-zookeeper:7.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: presto-kafka
    image: confluentinc/cp-kafka:7.2.0
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: nids-zookeeper-cntr:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://presto-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: localhost
  
  init-kafka:
    image: confluentinc/cp-kafka:7.2.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server presto-kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server presto-kafka:9092 --create --if-not-exists --topic nids_prediction --replication-factor 1 --partitions 1
      

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server presto-kafka:9092 --list
      "

volumes:
  es_data:
    driver: local
  